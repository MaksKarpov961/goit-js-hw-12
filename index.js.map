{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// Імпорт бібліотеки axios для запитів на сервер\nimport axios from \"axios\";\n\n// Базовий URL для запитів до API Pixabay\nconst API_URL = 'https://pixabay.com/api/';\n// Ключ доступу до API Pixabay\nconst API_KEY = '45713433-433c1b648e48abad27090f3cc';\n\n// Функція для отримання даних з API Pixabay з пагінацією\nexport async function getGalleryData(queryValue, page = 1, perPage = 15) {\n  try {\n    // Створюємо параметри запиту\n    const searchParams = new URLSearchParams({\n      key: API_KEY,              // API ключ\n      q: queryValue,             // Пошуковий запит\n      image_type: 'photo',       // Тип зображення (фото)\n      orientation: 'horizontal', // Горизонтальна орієнтація зображення\n      safesearch: true,          // Включений безпечний пошук\n      page: page,                // Номер сторінки\n      per_page: perPage          // Кількість об'єктів на сторінку (15)\n    });\n\n    // Виконуємо запит до API з Axios\n    const response = await axios.get(`${API_URL}?${searchParams}`);\n\n    // Повертаємо отримані дані\n    return response.data;\n\n  } catch (error) {\n    // Обробляємо помилку та виводимо її у консоль\n    console.error('Помилка під час отримання даних:', error);\n    throw error; // Кидаємо помилку для обробки в інших місцях\n  }\n}\n","// Функція для додавання лоадера на інтерфейс\nexport function addLoader(element) {\n  // Створюємо HTML для лоадера\n  const loaderHTML = '<span class=\"loader\"></span>';\n  \n  // Вставляємо лоадер під вказаний елемент (під інпут або кнопку)\n  element.insertAdjacentHTML('afterend', loaderHTML);\n}\n\n// Функція для видалення лоадера з інтерфейсу\nexport function removeLoader() {\n  // Знаходимо елемент лоадера\n  const loader = document.querySelector('.loader');\n  \n  // Якщо лоадер знайдено, видаляємо його з DOM\n  if (loader) {\n    loader.remove();\n  }\n}\n\n// Функція для створення розмітки галереї\nexport function markup(data) {\n  // Створюємо HTML-розмітку для кожного зображення\n  return data.hits\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n            <li class=\"gallery-item hvr-grow\">\n              <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                <img\n                  class=\"gallery-image\"\n                  src=\"${webformatURL}\"\n                  alt=\"${tags}\"\n                  loading=\"lazy\"\n              /></a>\n              <ul class=\"img-content-wrapper\">\n                <li class=\"img-content-descr\">Likes<span>${likes}</span></li>\n                <li class=\"img-content-descr\">Views<span>${views}</span></li>\n                <li class=\"img-content-descr\">Comments<span>${comments}</span></li>\n                <li class=\"img-content-descr\">Downloads<span>${downloads}</span></li>\n              </ul>\n            </li>\n      `\n    )\n    .join(''); // Перетворюємо масив у строку HTML\n}\n","// Імпорт функції для запиту до API\nimport { getGalleryData } from './js/pixabay-api';\n\n// Імпорт функцій для роботи з інтерфейсом\nimport { addLoader, removeLoader, markup } from './js/render-functions';\n\n// Імпорт бібліотеки iziToast\nimport iziToast from 'izitoast'; \nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Імпорт бібліотеки SimpleLightbox для показу зображень\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Отримуємо елемент форми пошуку\nconst form = document.querySelector('.search-form');\n\n// Отримуємо контейнер для галереї\nconst gallery = document.querySelector('.gallery');\n\n// Отримуємо кнопку для завантаження додаткових зображень\nconst loadMoreBtn = document.querySelector('.load-more-button');\n\n// Ініціалізуємо SimpleLightbox\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt', // Використовуємо атрибут alt для підписів\n  captionDelay: 250,   // Затримка перед показом підпису\n});\n\nlet searchValue = '';  // Змінна для зберігання пошукового запиту\nlet page = 1;          // Поточна сторінка для пагінації\nlet totalHits = 0;     // Загальна кількість результатів з API\nlet shouldSmoothScroll = false; // Прапорець для контролю плавної прокрутки\n\n// Спочатку ховаємо кнопку завантаження додаткових зображень\nloadMoreBtn.style.display = 'none';  \n\n// Додаємо обробник події submit до форми для обробки пошукового запиту\nform.addEventListener('submit', onSubmitForm);\n\n// Додаємо обробник події click до кнопки завантаження додаткових зображень\nloadMoreBtn.addEventListener('click', onLoadMore);\n\n// Функція обробки події submit на формі\nfunction onSubmitForm(event) {\n  event.preventDefault(); // Запобігаємо перезавантаженню сторінки\n  \n  // Отримуємо дані з форми\n  const formData = new FormData(event.target);\n  const { search } = Object.fromEntries(formData.entries());\n  searchValue = search.trim(); // Отримуємо і очищуємо пошуковий запит\n\n  // Якщо поле пошуку порожнє, показуємо помилку\n  if (!searchValue) {\n    iziToast.error({\n      title: 'Error',\n      message: 'The search query is empty.',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  // Скидаємо номер сторінки при новому запиті\n  page = 1;\n  gallery.innerHTML = ''; // Очищаємо галерею від попередніх результатів\n  loadMoreBtn.style.display = 'none'; // Ховаємо кнопку\n\n  // Додаємо лоадер під інпут форми\n  addLoader(form);\n\n  // Викликаємо функцію для запиту даних з API\n  fetchGalleryData();\n}\n\n// Функція для запиту до API та відображення результатів\nasync function fetchGalleryData() {\n  try {\n    const data = await getGalleryData(searchValue, page); // Отримуємо дані з API\n    totalHits = data.totalHits; // Отримуємо загальну кількість результатів\n\n    // Якщо результатів немає, показуємо інформаційне повідомлення\n    if (data.hits.length === 0) {\n      iziToast.info({\n        position: 'topRight',\n        title: 'Info',\n        message: 'Sorry, there are no images matching your search query. Please try again!',\n      });\n      return;\n    }\n\n    // Генеруємо розмітку для галереї та додаємо її до контейнера\n    const galleryMarkup = markup(data);\n    gallery.insertAdjacentHTML('beforeend', galleryMarkup);\n\n    // Оновлюємо лайтбокс для нових зображень\n    lightbox.refresh();\n\n    // Якщо користувач досяг кінця результатів\n    if (page * 15 >= totalHits) {\n      iziToast.info({\n        title: 'Info',\n        message: \"We're sorry, but you've reached the end of search results.\",\n        position: 'topRight',\n      });\n      loadMoreBtn.style.display = 'none'; // Ховаємо кнопку\n    } else {\n      loadMoreBtn.style.display = 'block';  // Показуємо кнопку \"Load more\"\n    }\n\n  } catch (error) {\n    console.error('Помилка:', error); // Виводимо помилку у консоль\n    iziToast.error({\n      title: 'Error',\n      message: `Error: ${error.message}`,\n      position: 'topRight',\n    });\n  } finally {\n    removeLoader(); // Видаляємо лоадер після завершення завантаження\n    if (shouldSmoothScroll) {\n      smoothScroll(); // Додаємо плавну прокрутку після завершення завантаження\n      shouldSmoothScroll = false; // Скидаємо прапорець після прокрутки\n    }\n  }\n}\n\n// Функція для завантаження додаткових зображень при натисканні на кнопку \"Load more\"\nfunction onLoadMore() {\n  page += 1; // Збільшуємо номер сторінки для пагінації\n\n  // Ховаємо кнопку і показуємо лоадер під кнопкою\n  loadMoreBtn.style.display = 'none';\n  addLoader(loadMoreBtn);\n\n  // Встановлюємо прапорець для плавної прокрутки\n  shouldSmoothScroll = true;\n\n  // Викликаємо функцію для отримання наступної порції зображень\n  fetchGalleryData();\n}\n\n// Функція для плавної прокрутки сторінки після завантаження зображень\nfunction smoothScroll() {\n  // Знаходимо перший елемент галереї\n  const firstGalleryItem = document.querySelector('.gallery-item');\n\n  // Якщо елемент знайдено\n  if (firstGalleryItem) {\n    // Отримуємо висоту однієї карточки галереї\n    const cardHeight = firstGalleryItem.getBoundingClientRect().height;\n\n    // Прокручуємо сторінку\n    window.scrollBy({\n      top: cardHeight * 2,\n      behavior: 'smooth',\n    });\n  }\n}\n"],"names":["API_URL","API_KEY","getGalleryData","queryValue","page","perPage","searchParams","axios","error","addLoader","element","removeLoader","loader","markup","data","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","gallery","loadMoreBtn","lightbox","SimpleLightbox","searchValue","totalHits","shouldSmoothScroll","onSubmitForm","onLoadMore","event","formData","search","iziToast","fetchGalleryData","galleryMarkup","smoothScroll","firstGalleryItem","cardHeight"],"mappings":"owBAIA,MAAMA,EAAU,2BAEVC,EAAU,qCAGT,eAAeC,EAAeC,EAAYC,EAAO,EAAGC,EAAU,GAAI,CACvE,GAAI,CAEF,MAAMC,EAAe,IAAI,gBAAgB,CACvC,IAAKL,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMC,EACN,SAAUC,CAChB,CAAK,EAMD,OAHiB,MAAME,EAAM,IAAI,GAAGP,CAAO,IAAIM,CAAY,EAAE,GAG7C,IAEjB,OAAQE,EAAO,CAEd,cAAQ,MAAM,mCAAoCA,CAAK,EACjDA,CACP,CACH,CChCO,SAASC,EAAUC,EAAS,CAKjCA,EAAQ,mBAAmB,WAHR,8BAG8B,CACnD,CAGO,SAASC,GAAe,CAE7B,MAAMC,EAAS,SAAS,cAAc,SAAS,EAG3CA,GACFA,EAAO,OAAM,CAEjB,CAGO,SAASC,EAAOC,EAAM,CAE3B,OAAOA,EAAK,KACT,IACC,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,8CAEtCL,CAAa;AAAA;AAAA;AAAA,yBAGlCD,CAAY;AAAA,yBACZE,CAAI;AAAA;AAAA;AAAA;AAAA,2DAI8BC,CAAK;AAAA,2DACLC,CAAK;AAAA,8DACFC,CAAQ;AAAA,+DACPC,CAAS;AAAA;AAAA;AAAA,OAInE,EACA,KAAK,EAAE,CACZ,CC7BA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAG5CC,EAAU,SAAS,cAAc,UAAU,EAG3CC,EAAc,SAAS,cAAc,mBAAmB,EAG9D,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,GAChB,CAAC,EAEGC,EAAc,GACdvB,EAAO,EACPwB,EAAY,EACZC,EAAqB,GAGzBL,EAAY,MAAM,QAAU,OAG5BF,EAAK,iBAAiB,SAAUQ,CAAY,EAG5CN,EAAY,iBAAiB,QAASO,CAAU,EAGhD,SAASD,EAAaE,EAAO,CAC3BA,EAAM,eAAc,EAGpB,MAAMC,EAAW,IAAI,SAASD,EAAM,MAAM,EACpC,CAAE,OAAAE,CAAM,EAAK,OAAO,YAAYD,EAAS,QAAO,CAAE,EAIxD,GAHAN,EAAcO,EAAO,OAGjB,CAACP,EAAa,CAChBQ,EAAS,MAAM,CACb,MAAO,QACP,QAAS,6BACT,SAAU,UAChB,CAAK,EACD,MACD,CAGD/B,EAAO,EACPmB,EAAQ,UAAY,GACpBC,EAAY,MAAM,QAAU,OAG5Bf,EAAUa,CAAI,EAGdc,GACF,CAGA,eAAeA,GAAmB,CAChC,GAAI,CACF,MAAMtB,EAAO,MAAMZ,EAAeyB,EAAavB,CAAI,EAInD,GAHAwB,EAAYd,EAAK,UAGbA,EAAK,KAAK,SAAW,EAAG,CAC1BqB,EAAS,KAAK,CACZ,SAAU,WACV,MAAO,OACP,QAAS,0EACjB,CAAO,EACD,MACD,CAGD,MAAME,EAAgBxB,EAAOC,CAAI,EACjCS,EAAQ,mBAAmB,YAAac,CAAa,EAGrDZ,EAAS,QAAO,EAGZrB,EAAO,IAAMwB,GACfO,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,6DACT,SAAU,UAClB,CAAO,EACDX,EAAY,MAAM,QAAU,QAE5BA,EAAY,MAAM,QAAU,OAG/B,OAAQhB,EAAO,CACd,QAAQ,MAAM,WAAYA,CAAK,EAC/B2B,EAAS,MAAM,CACb,MAAO,QACP,QAAS,UAAU3B,EAAM,OAAO,GAChC,SAAU,UAChB,CAAK,CACL,QAAY,CACRG,IACIkB,IACFS,IACAT,EAAqB,GAExB,CACH,CAGA,SAASE,GAAa,CACpB3B,GAAQ,EAGRoB,EAAY,MAAM,QAAU,OAC5Bf,EAAUe,CAAW,EAGrBK,EAAqB,GAGrBO,GACF,CAGA,SAASE,GAAe,CAEtB,MAAMC,EAAmB,SAAS,cAAc,eAAe,EAG/D,GAAIA,EAAkB,CAEpB,MAAMC,EAAaD,EAAiB,sBAAqB,EAAG,OAG5D,OAAO,SAAS,CACd,IAAKC,EAAa,EAClB,SAAU,QAChB,CAAK,CACF,CACH"}